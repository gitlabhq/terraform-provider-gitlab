# This workflow runs basic checks for pull requests that do not need secrets.

name: pr-lint

on: [pull_request]

concurrency: 
  group: ${{ github.workflow }}-${{ github.event.pull_request.number }}
  cancel-in-progress: true

jobs:
  go-version:
    runs-on: ubuntu-latest
    outputs:
      go-version: ${{ steps.go-version.outputs.go-version }}
    steps:
      - uses: actions/checkout@v3
      # Read the .go-version file and output it for other jobs to use.
      - id: go-version
        run: echo "::set-output name=go-version::$(cat .go-version)"

  lint:
    runs-on: ubuntu-latest
    needs: [go-version]
    strategy:
      fail-fast: false
      # Run all lint targets.
      matrix:
        target:
          - lint-golangci
          - lint-tfprovider
          - lint-examples-tf
          - lint-examples-sh
          - lint-generated
          - lint-custom
    steps:
      - uses: actions/setup-go@v3
        with:
          go-version: ${{ needs.go-version.outputs.go-version }}
      - uses: actions/checkout@v3
      # Cache the Go modules and compiled tools for the specific lint target.
      - uses: actions/cache@v3
        with:
          path: |
            ~/go/pkg/mod
            bin
          key: ${{ github.job }}-${{ matrix.target }}-${{ runner.os }}-go${{ env.GO_VERSION }}-${{ hashFiles('**/go.sum', 'GNUMakefile') }}
      - run: make ${{ matrix.target }}

  unit-test:
    runs-on: ${{ matrix.os }}
    needs: [go-version]
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
      - uses: actions/setup-go@v3
        with:
          go-version: ${{ needs.go-version.outputs.go-version }}
      - uses: actions/checkout@v3
      # Cache the Go modules.
      - uses: actions/cache@v3
        with:
          path: ~/go/pkg/mod
          key: ${{ github.job }}-${{ runner.os }}-go${{ env.GO_VERSION }}-${{ hashFiles('**/go.sum', 'GNUMakefile') }}
      - run: make test
